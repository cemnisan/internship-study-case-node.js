{"version":3,"sources":["../../src/controller/room.js"],"names":["getRooms","_req","res","rooms","Room","find","status","json","err","message","addRoom","req","newRoom","body","roomImage","file","path","results","save","updateReservation","id","params","updateForm","findByIdAndUpdate","new","deleteRoom","room","findOne","_id","deleteImage","fs","unlinkSync","findByIdAndDelete","send"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEO,MAAMA,QAAQ,GAAG,OAAOC,IAAP,EAAaC,GAAb,KAAqB;AAC3C,MAAI;AACF,UAAMC,KAAK,GAAG,MAAMC,cAAKC,IAAL,CAAU,EAAV,CAApB;AACAH,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,KAArB;AACD,GAHD,CAGE,OAAOK,GAAP,EAAY;AACZN,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,MAAAA,OAAO,EAAED;AAAX,KAArB;AACD;AACF,CAPM;;;;AASA,MAAME,OAAO,GAAG,OAAOC,GAAP,EAAYT,GAAZ,KAAoB;AACzC,MAAI;AACF,UAAMU,OAAO,GAAG,IAAIR,aAAJ,CAAS,EACvB,GAAGO,GAAG,CAACE,IADgB;AAEvBC,MAAAA,SAAS,EAAEH,GAAG,CAACI,IAAJ,GAAWJ,GAAG,CAACI,IAAJ,CAASC,IAApB,GAA2B;AAFf,KAAT,CAAhB;AAIA,UAAMC,OAAO,GAAG,MAAML,OAAO,CAACM,IAAR,EAAtB;AACAhB,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBU,OAArB;AACD,GAPD,CAOE,OAAOT,GAAP,EAAY;AACZN,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,MAAAA,OAAO,EAAED;AAAX,KAArB;AACD;AACF,CAXM;;;;AAaA,MAAMW,iBAAiB,GAAG,OAAOR,GAAP,EAAYT,GAAZ,KAAoB;AACnD,MAAI;AACF,UAAM;AAAEkB,MAAAA;AAAF,QAAST,GAAG,CAACU,MAAnB;AACA,UAAMC,UAAU,GAAG,MAAMlB,cAAKmB,iBAAL,CACvBH,EADuB,EAEvB,EACE,GAAGT,GAAG,CAACE;AADT,KAFuB,EAKvB;AAAEW,MAAAA,GAAG,EAAE;AAAP,KALuB,CAAzB;AAOAtB,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBe,UAArB;AACD,GAVD,CAUE,OAAOd,GAAP,EAAY;AACZN,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,MAAAA,OAAO,EAAED;AAAX,KAArB;AACD;AACF,CAdM;;;;AAgBA,MAAMiB,UAAU,GAAG,OAAOd,GAAP,EAAYT,GAAZ,KAAoB;AAC5C,MAAI;AACF,UAAM;AAAEkB,MAAAA;AAAF,QAAST,GAAG,CAACU,MAAnB;AACA,UAAMK,IAAI,GAAG,MAAMtB,cAAKuB,OAAL,CAAa;AAAEC,MAAAA,GAAG,EAAER;AAAP,KAAb,CAAnB;AAEA,UAAMS,WAAW,GAAGH,IAAI,CAACZ,SAAzB;;AACAgB,gBAAGC,UAAH,CAAcF,WAAd;;AAEA,UAAMzB,cAAK4B,iBAAL,CAAuBZ,EAAvB,CAAN;AACAlB,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgB2B,IAAhB,CAAqB;AAAExB,MAAAA,OAAO,EAAE;AAAX,KAArB;AAED,GAVD,CAUE,OAAOD,GAAP,EAAY;AACZN,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,MAAAA,OAAO,EAAED;AAAX,KAArB;AACD;AACF,CAdM","sourcesContent":["import Room from \"../model/Room\";\nimport fs from 'fs';\n\nexport const getRooms = async (_req, res) => {\n  try {\n    const rooms = await Room.find({});\n    res.status(200).json(rooms);\n  } catch (err) {\n    res.status(404).json({ message: err });\n  }\n};\n\nexport const addRoom = async (req, res) => {\n  try {\n    const newRoom = new Room({\n      ...req.body,\n      roomImage: req.file ? req.file.path : null\n    });\n    const results = await newRoom.save();\n    res.status(201).json(results);\n  } catch (err) {\n    res.status(400).json({ message: err });\n  }\n};\n\nexport const updateReservation = async (req, res) => {\n  try {\n    const { id } = req.params;\n    const updateForm = await Room.findByIdAndUpdate(\n      id,\n      {\n        ...req.body,\n      },\n      { new: true }\n    );\n    res.status(200).json(updateForm);\n  } catch (err) {\n    res.status(404).json({ message: err });\n  }\n};\n\nexport const deleteRoom = async (req, res) => {\n  try {\n    const { id } = req.params;\n    const room = await Room.findOne({ _id: id });\n\n    const deleteImage = room.roomImage\n    fs.unlinkSync(deleteImage);\n  \n    await Room.findByIdAndDelete(id);\n    res.status(201).send({ message: \"This room has been deleted.\" });\n\n  } catch (err) {\n    res.status(404).json({ message: err });\n  }\n};\n"],"file":"room.js"}